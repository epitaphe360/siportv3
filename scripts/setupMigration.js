import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function setupMigration() {
  try {
    console.log('üöÄ Configuration automatique de la migration Supabase...\n');

    // Lire le fichier de migration
    const migrationPath = path.join(__dirname, '..', 'supabase', 'migrations', '20250912200000_add_missing_tables.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');

    console.log('üìã Migration SQL charg√©e avec succ√®s');
    console.log(`üìä Taille du fichier: ${migrationSQL.length} caract√®res\n`);

    // Ouvrir le dashboard Supabase dans le navigateur
    console.log('üåê Ouverture du dashboard Supabase...');
    try {
      // Essayer d'ouvrir dans le navigateur par d√©faut
      if (process.platform === 'win32') {
        await execAsync('start https://supabase.com/dashboard');
      } else if (process.platform === 'darwin') {
        await execAsync('open https://supabase.com/dashboard');
      } else {
        await execAsync('xdg-open https://supabase.com/dashboard');
      }
      console.log('‚úÖ Dashboard Supabase ouvert dans votre navigateur\n');
    } catch (error) {
      console.log('‚ö†Ô∏è  Impossible d\'ouvrir automatiquement le navigateur');
      console.log('üîó Veuillez ouvrir manuellement: https://supabase.com/dashboard\n');
    }

    console.log('üìù INSTRUCTIONS POUR LA MIGRATION:');
    console.log('='.repeat(50));
    console.log('1. Connectez-vous √† votre compte Supabase');
    console.log('2. S√©lectionnez votre projet SIPORTS');
    console.log('3. Allez dans l\'onglet "SQL Editor"');
    console.log('4. Cliquez sur "New Query"');
    console.log('5. Copiez-collez tout le contenu ci-dessous:');
    console.log('='.repeat(50));
    console.log('');

    // Afficher le SQL avec des marqueurs pour faciliter la copie
    console.log('--- D√âBUT DU SQL √Ä COPIER ---');
    console.log(migrationSQL);
    console.log('--- FIN DU SQL ---');

    console.log('');
    console.log('='.repeat(50));
    console.log('6. Cliquez sur "Run" pour ex√©cuter la migration');
    console.log('7. V√©rifiez que toutes les tables sont cr√©√©es');
    console.log('='.repeat(50));

    console.log('\nüéØ TABLES QUI SERONT CR√â√âES:');
    const tables = [
      'partners - Table d√©di√©e aux partenaires',
      'conversations - Gestion des conversations chat',
      'messages - Messages individuels du chat',
      'message_attachments - Pi√®ces jointes des messages',
      'event_registrations - Inscriptions aux √©v√©nements',
      'networking_recommendations - Recommandations IA',
      'analytics - Analyses et m√©triques d√©taill√©es',
      'activities - Suivi des activit√©s utilisateurs'
    ];

    tables.forEach(table => console.log(`  ‚Ä¢ ${table}`));

    console.log('\n‚ö° FONCTIONNALIT√âS D√âBLOQU√âES APR√àS MIGRATION:');
    console.log('  ‚Ä¢ Syst√®me de chat complet');
    console.log('  ‚Ä¢ Gestion des partenaires');
    console.log('  ‚Ä¢ Inscriptions aux √©v√©nements');
    console.log('  ‚Ä¢ Recommandations de networking IA');
    console.log('  ‚Ä¢ Analytics avanc√©s');
    console.log('  ‚Ä¢ Suivi des activit√©s utilisateurs');

    console.log('\n‚ú® Migration pr√™te ! Suivez les instructions ci-dessus.');

  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration:', error.message);
    process.exit(1);
  }
}

// Ex√©cuter la configuration
setupMigration();
